//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrendingApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.ServiceReference1.DITag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.ServiceReference1.AITag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.ServiceReference1.DOTag))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TrendingApp.ServiceReference1.AOTag))]
    public partial class Tag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IOAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IOAddress {
            get {
                return this.IOAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IOAddressField, value) != true)) {
                    this.IOAddressField = value;
                    this.RaisePropertyChanged("IOAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DITag", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore")]
    [System.SerializableAttribute()]
    public partial class DITag : TrendingApp.ServiceReference1.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ScanOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScanTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ScanOn {
            get {
                return this.ScanOnField;
            }
            set {
                if ((this.ScanOnField.Equals(value) != true)) {
                    this.ScanOnField = value;
                    this.RaisePropertyChanged("ScanOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScanTime {
            get {
                return this.ScanTimeField;
            }
            set {
                if ((this.ScanTimeField.Equals(value) != true)) {
                    this.ScanTimeField = value;
                    this.RaisePropertyChanged("ScanTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AITag", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore")]
    [System.SerializableAttribute()]
    public partial class AITag : TrendingApp.ServiceReference1.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] AlarmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LowLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ScanOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScanTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Alarms {
            get {
                return this.AlarmsField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmsField, value) != true)) {
                    this.AlarmsField = value;
                    this.RaisePropertyChanged("Alarms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Driver {
            get {
                return this.DriverField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverField, value) != true)) {
                    this.DriverField = value;
                    this.RaisePropertyChanged("Driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighLimit {
            get {
                return this.HighLimitField;
            }
            set {
                if ((this.HighLimitField.Equals(value) != true)) {
                    this.HighLimitField = value;
                    this.RaisePropertyChanged("HighLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LowLimit {
            get {
                return this.LowLimitField;
            }
            set {
                if ((this.LowLimitField.Equals(value) != true)) {
                    this.LowLimitField = value;
                    this.RaisePropertyChanged("LowLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ScanOn {
            get {
                return this.ScanOnField;
            }
            set {
                if ((this.ScanOnField.Equals(value) != true)) {
                    this.ScanOnField = value;
                    this.RaisePropertyChanged("ScanOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScanTime {
            get {
                return this.ScanTimeField;
            }
            set {
                if ((this.ScanTimeField.Equals(value) != true)) {
                    this.ScanTimeField = value;
                    this.RaisePropertyChanged("ScanTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DOTag", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore")]
    [System.SerializableAttribute()]
    public partial class DOTag : TrendingApp.ServiceReference1.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InitialValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InitialValue {
            get {
                return this.InitialValueField;
            }
            set {
                if ((this.InitialValueField.Equals(value) != true)) {
                    this.InitialValueField = value;
                    this.RaisePropertyChanged("InitialValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AOTag", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore")]
    [System.SerializableAttribute()]
    public partial class AOTag : TrendingApp.ServiceReference1.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InitialValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LowLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighLimit {
            get {
                return this.HighLimitField;
            }
            set {
                if ((this.HighLimitField.Equals(value) != true)) {
                    this.HighLimitField = value;
                    this.RaisePropertyChanged("HighLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InitialValue {
            get {
                return this.InitialValueField;
            }
            set {
                if ((this.InitialValueField.Equals(value) != true)) {
                    this.InitialValueField = value;
                    this.RaisePropertyChanged("InitialValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LowLimit {
            get {
                return this.LowLimitField;
            }
            set {
                if ((this.LowLimitField.Equals(value) != true)) {
                    this.LowLimitField = value;
                    this.RaisePropertyChanged("LowLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITagProcessing")]
    public interface ITagProcessing {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagProcessing/AddTag", ReplyAction="http://tempuri.org/ITagProcessing/AddTagResponse")]
        void AddTag(TrendingApp.ServiceReference1.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagProcessing/AddTag", ReplyAction="http://tempuri.org/ITagProcessing/AddTagResponse")]
        System.Threading.Tasks.Task AddTagAsync(TrendingApp.ServiceReference1.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagProcessing/RemoveTag", ReplyAction="http://tempuri.org/ITagProcessing/RemoveTagResponse")]
        void RemoveTag(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagProcessing/RemoveTag", ReplyAction="http://tempuri.org/ITagProcessing/RemoveTagResponse")]
        System.Threading.Tasks.Task RemoveTagAsync(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagProcessing/SetTagValue", ReplyAction="http://tempuri.org/ITagProcessing/SetTagValueResponse")]
        bool SetTagValue(string tagName, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagProcessing/SetTagValue", ReplyAction="http://tempuri.org/ITagProcessing/SetTagValueResponse")]
        System.Threading.Tasks.Task<bool> SetTagValueAsync(string tagName, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagProcessing/GetTagValue", ReplyAction="http://tempuri.org/ITagProcessing/GetTagValueResponse")]
        double GetTagValue(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagProcessing/GetTagValue", ReplyAction="http://tempuri.org/ITagProcessing/GetTagValueResponse")]
        System.Threading.Tasks.Task<double> GetTagValueAsync(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagProcessing/TurnScanOnOff", ReplyAction="http://tempuri.org/ITagProcessing/TurnScanOnOffResponse")]
        void TurnScanOnOff(string tagName, bool onOff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagProcessing/TurnScanOnOff", ReplyAction="http://tempuri.org/ITagProcessing/TurnScanOnOffResponse")]
        System.Threading.Tasks.Task TurnScanOnOffAsync(string tagName, bool onOff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagProcessing/GetInputTagValue", ReplyAction="http://tempuri.org/ITagProcessing/GetInputTagValueResponse")]
        string GetInputTagValue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagProcessing/GetInputTagValue", ReplyAction="http://tempuri.org/ITagProcessing/GetInputTagValueResponse")]
        System.Threading.Tasks.Task<string> GetInputTagValueAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITagProcessingChannel : TrendingApp.ServiceReference1.ITagProcessing, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TagProcessingClient : System.ServiceModel.ClientBase<TrendingApp.ServiceReference1.ITagProcessing>, TrendingApp.ServiceReference1.ITagProcessing {
        
        public TagProcessingClient() {
        }
        
        public TagProcessingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TagProcessingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TagProcessingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TagProcessingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddTag(TrendingApp.ServiceReference1.Tag tag) {
            base.Channel.AddTag(tag);
        }
        
        public System.Threading.Tasks.Task AddTagAsync(TrendingApp.ServiceReference1.Tag tag) {
            return base.Channel.AddTagAsync(tag);
        }
        
        public void RemoveTag(string tagName) {
            base.Channel.RemoveTag(tagName);
        }
        
        public System.Threading.Tasks.Task RemoveTagAsync(string tagName) {
            return base.Channel.RemoveTagAsync(tagName);
        }
        
        public bool SetTagValue(string tagName, double value) {
            return base.Channel.SetTagValue(tagName, value);
        }
        
        public System.Threading.Tasks.Task<bool> SetTagValueAsync(string tagName, double value) {
            return base.Channel.SetTagValueAsync(tagName, value);
        }
        
        public double GetTagValue(string tagName) {
            return base.Channel.GetTagValue(tagName);
        }
        
        public System.Threading.Tasks.Task<double> GetTagValueAsync(string tagName) {
            return base.Channel.GetTagValueAsync(tagName);
        }
        
        public void TurnScanOnOff(string tagName, bool onOff) {
            base.Channel.TurnScanOnOff(tagName, onOff);
        }
        
        public System.Threading.Tasks.Task TurnScanOnOffAsync(string tagName, bool onOff) {
            return base.Channel.TurnScanOnOffAsync(tagName, onOff);
        }
        
        public string GetInputTagValue() {
            return base.Channel.GetInputTagValue();
        }
        
        public System.Threading.Tasks.Task<string> GetInputTagValueAsync() {
            return base.Channel.GetInputTagValueAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IUserProcessing")]
    public interface IUserProcessing {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserProcessing/RegisterUser", ReplyAction="http://tempuri.org/IUserProcessing/RegisterUserResponse")]
        bool RegisterUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserProcessing/RegisterUser", ReplyAction="http://tempuri.org/IUserProcessing/RegisterUserResponse")]
        System.Threading.Tasks.Task<bool> RegisterUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserProcessing/Login", ReplyAction="http://tempuri.org/IUserProcessing/LoginResponse")]
        bool Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserProcessing/Login", ReplyAction="http://tempuri.org/IUserProcessing/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserProcessing/Logout", ReplyAction="http://tempuri.org/IUserProcessing/LogoutResponse")]
        void Logout(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserProcessing/Logout", ReplyAction="http://tempuri.org/IUserProcessing/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserProcessingChannel : TrendingApp.ServiceReference1.IUserProcessing, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserProcessingClient : System.ServiceModel.ClientBase<TrendingApp.ServiceReference1.IUserProcessing>, TrendingApp.ServiceReference1.IUserProcessing {
        
        public UserProcessingClient() {
        }
        
        public UserProcessingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserProcessingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserProcessingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserProcessingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegisterUser(string username, string password) {
            return base.Channel.RegisterUser(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterUserAsync(string username, string password) {
            return base.Channel.RegisterUserAsync(username, password);
        }
        
        public bool Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public void Logout(string username) {
            base.Channel.Logout(username);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(string username) {
            return base.Channel.LogoutAsync(username);
        }
    }
}
