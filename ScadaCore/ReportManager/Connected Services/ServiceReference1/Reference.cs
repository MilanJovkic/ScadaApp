//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportManager.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TriggeredAlarm", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore")]
    [System.SerializableAttribute()]
    public partial class TriggeredAlarm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReportManager.ServiceReference1.Alarm AlarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TriggeredAtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReportManager.ServiceReference1.Alarm Alarm {
            get {
                return this.AlarmField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmField, value) != true)) {
                    this.AlarmField = value;
                    this.RaisePropertyChanged("Alarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TriggeredAt {
            get {
                return this.TriggeredAtField;
            }
            set {
                if ((this.TriggeredAtField.Equals(value) != true)) {
                    this.TriggeredAtField = value;
                    this.RaisePropertyChanged("TriggeredAt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alarm", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore")]
    [System.SerializableAttribute()]
    public partial class Alarm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ThresholdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ReportManager.ServiceReference1.AlarmType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Threshold {
            get {
                return this.ThresholdField;
            }
            set {
                if ((this.ThresholdField.Equals(value) != true)) {
                    this.ThresholdField = value;
                    this.RaisePropertyChanged("Threshold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ReportManager.ServiceReference1.AlarmType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmType", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore")]
    public enum AlarmType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        low = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        high = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagValue", Namespace="http://schemas.datacontract.org/2004/07/ScadaCore")]
    [System.SerializableAttribute()]
    public partial class TagValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ArrivedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ArrivedAt {
            get {
                return this.ArrivedAtField;
            }
            set {
                if ((this.ArrivedAtField.Equals(value) != true)) {
                    this.ArrivedAtField = value;
                    this.RaisePropertyChanged("ArrivedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagType {
            get {
                return this.TagTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TagTypeField, value) != true)) {
                    this.TagTypeField = value;
                    this.RaisePropertyChanged("TagType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IReportManagerService")]
    public interface IReportManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAlarmsWithinPeriod", ReplyAction="http://tempuri.org/IReportManagerService/GetAlarmsWithinPeriodResponse")]
        ReportManager.ServiceReference1.TriggeredAlarm[] GetAlarmsWithinPeriod(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAlarmsWithinPeriod", ReplyAction="http://tempuri.org/IReportManagerService/GetAlarmsWithinPeriodResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TriggeredAlarm[]> GetAlarmsWithinPeriodAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAlarmsOfPriority", ReplyAction="http://tempuri.org/IReportManagerService/GetAlarmsOfPriorityResponse")]
        ReportManager.ServiceReference1.TriggeredAlarm[] GetAlarmsOfPriority(int priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetAlarmsOfPriority", ReplyAction="http://tempuri.org/IReportManagerService/GetAlarmsOfPriorityResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TriggeredAlarm[]> GetAlarmsOfPriorityAsync(int priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetTagValues", ReplyAction="http://tempuri.org/IReportManagerService/GetTagValuesResponse")]
        ReportManager.ServiceReference1.TagValue[] GetTagValues(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetTagValues", ReplyAction="http://tempuri.org/IReportManagerService/GetTagValuesResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagValue[]> GetTagValuesAsync(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetLastValuesOfTags", ReplyAction="http://tempuri.org/IReportManagerService/GetLastValuesOfTagsResponse")]
        ReportManager.ServiceReference1.TagValue[] GetLastValuesOfTags(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetLastValuesOfTags", ReplyAction="http://tempuri.org/IReportManagerService/GetLastValuesOfTagsResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagValue[]> GetLastValuesOfTagsAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetTagValuesWithinPeriod", ReplyAction="http://tempuri.org/IReportManagerService/GetTagValuesWithinPeriodResponse")]
        ReportManager.ServiceReference1.TagValue[] GetTagValuesWithinPeriod(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/GetTagValuesWithinPeriod", ReplyAction="http://tempuri.org/IReportManagerService/GetTagValuesWithinPeriodResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagValue[]> GetTagValuesWithinPeriodAsync(System.DateTime start, System.DateTime end);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportManagerServiceChannel : ReportManager.ServiceReference1.IReportManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportManagerServiceClient : System.ServiceModel.ClientBase<ReportManager.ServiceReference1.IReportManagerService>, ReportManager.ServiceReference1.IReportManagerService {
        
        public ReportManagerServiceClient() {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReportManager.ServiceReference1.TriggeredAlarm[] GetAlarmsWithinPeriod(System.DateTime start, System.DateTime end) {
            return base.Channel.GetAlarmsWithinPeriod(start, end);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TriggeredAlarm[]> GetAlarmsWithinPeriodAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.GetAlarmsWithinPeriodAsync(start, end);
        }
        
        public ReportManager.ServiceReference1.TriggeredAlarm[] GetAlarmsOfPriority(int priority) {
            return base.Channel.GetAlarmsOfPriority(priority);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TriggeredAlarm[]> GetAlarmsOfPriorityAsync(int priority) {
            return base.Channel.GetAlarmsOfPriorityAsync(priority);
        }
        
        public ReportManager.ServiceReference1.TagValue[] GetTagValues(string tagName) {
            return base.Channel.GetTagValues(tagName);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagValue[]> GetTagValuesAsync(string tagName) {
            return base.Channel.GetTagValuesAsync(tagName);
        }
        
        public ReportManager.ServiceReference1.TagValue[] GetLastValuesOfTags(string type) {
            return base.Channel.GetLastValuesOfTags(type);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagValue[]> GetLastValuesOfTagsAsync(string type) {
            return base.Channel.GetLastValuesOfTagsAsync(type);
        }
        
        public ReportManager.ServiceReference1.TagValue[] GetTagValuesWithinPeriod(System.DateTime start, System.DateTime end) {
            return base.Channel.GetTagValuesWithinPeriod(start, end);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagValue[]> GetTagValuesWithinPeriodAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.GetTagValuesWithinPeriodAsync(start, end);
        }
    }
}
